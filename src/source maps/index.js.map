{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\nimport intl from 'intl';\nimport moment from 'moment-timezone';\n\n/**\n * Global settings\n */\nvar settings = require('../settings');\n\nclass Tokei {\n  constructor(locale) {\n      /**\n       * Set Intl Alias\n       */\n      this.Intl = {\n        'Date': intl.DateTimeFormat,\n        'Number': intl.NumberFormat\n      };\n      /*\n        Set private variables\n      */\n      // Set the current date\n      this._date = moment();\n      // Set the initial number\n      this._number = 0;\n      // Set the locale\n      this._locale = locale || settings.locale;\n      // Set moment\n      this._moment = moment;\n      // Set moment to global locale\n      this._moment.locale(locale || settings.locale);\n      // Determines if the chain is formatting a number\n      this._isNumber = false;\n    }\n    /**\n     * Returns the current date or time\n     * @return {String} The current date or time.\n     */\n  now() {\n      /**\n       *### Example\n       * \n       *#### Get the current date\n       *\n       *```javascript\n       * // Returns the current date\n       * tokei().date().now();\n       *```\n       *\n       *#### Get the current time\n       *\n       *```javascript\n       * // Returns the current time\n       * tokei().time().now();\n       *```\n       */\n      return new this.Intl.Date(this._locale, this._options).format(moment());\n    }\n    /**\n     * Formats the date.\n     * See [DateTimeFormat](https://goo.gl/19d1rX).\n     * @param {Object} options The options for date formatting.\n     * @return {Tokei} this\n     */\n  date(options) {\n      /**\n       *### Example\n       * \n       *#### Get the formatted date.\n       *\n       *```javascript\n       * tokei().date().format(new Date(Date.UTC(2012, 11, 20, 3, 0, 0)));\n       *```\n       *\n       *#### Get the formatted date with options.\n       *```javascript\n       * var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n       * tokei('de-DE').date(options).format(new Date(Date.UTC(2012, 11, 20, 3, 0, 0)));\n       *```\n       */\n\n      /**\n       * @private\n       */\n      this._options = options || settings.date;\n      this._isNumber = false;\n      return this;\n    }\n    /**\n     * Formats the time.\n     * See [DateTimeFormat](https://goo.gl/19d1rX).\n     * @return {Tokei} this.\n     */\n  time(options) {\n      /** \n       *### Example\n       *  \n       *#### Get the formatted time.\n       *\n       *```javascript\n       * tokei('en-AU').time().format(new Date(Date.UTC(2012, 11, 20, 3, 0, 0)));\n       *```\n       *\n       *#### Get the formatted time with options.\n       *\n       *```javascript\n       * var options =  { hour: 'numeric', minute: 'numeric', second: 'numeric', timeZoneName: 'short' };\n       * tokei('en-AU').time(options).format(new Date(Date.UTC(2012, 11, 20, 3, 0, 0)));\n       * ```\n       */\n\n      /**\n       * @private\n       */\n      this._options = options || settings.time;\n      this._isNumber = false;\n      return this;\n    }\n    /**\n     * Formats the time.\n     * See [NumberFormat](https://goo.gl/edHSxf).\n     * @return {Tokei} this.\n     */\n  number(options) {\n      /**\n       *### Example \n       *\n       *#### Get the formatted number.\n       *\n       *```javascript\n       * tokei('de-DE').number().format(123456.789);\n       *```\n       *\n       *#### Get the formatted number with options.\n       *\n       *```javascript\n       * var options =  { style: 'currency', currency: 'EUR' };\n       * tokei('de-DE').number(options).format(123456.789);\n       * ```\n       */\n\n      /**\n       * @private\n       */\n      this._options = options || {};\n      this.isNumber = true;\n      return this;\n    }\n    /**\n     * Formats the object\n     * See [DateTimeFormat](https://goo.gl/19d1rX) \n     * and [NumberFormat](https://goo.gl/edHSxf)\n     * @param  {(Date | Number)} obj The object to format.\n     * @return {(String | Number)}     The formatted date, time or number.\n     */\n  format(obj) {\n      /**\n       *### Example\n       *\n       *#### Get the formatted date, time, or number.\n       *\n       *```javascript\n       * //format date\n       * tokei().date().format([Date date]);\n       * //format time\n       * tokei().time().format([Date time]);\n       * //format number\n       * tokei().number().format([Number number]);\n       * ```\n       */\n\n      /**\n       * @private\n       */\n      if (this.isNumber)\n        return new this.Intl.Number(this._locale, this._options).format(obj || this._number);\n      else\n        return new this.Intl.Date(this._locale, this._options).format(obj || this._date);\n    }\n    /**\n     * The local moment.\n     * See [moment](http://momentjs.com/)\n     * @param {...*} arguments\n     * @return {Moment}\n     */\n  moment() {\n    /**\n     *### Example\n     *\n     *#### Using moment with Tokei.\n     *\n     *```javascript\n     * //use moment just as you would normally\n     * tokei().moment();\n     * //you can even set a locale\n     * tokei('ja').moment();\n     * ```\n     */\n    return this._moment.apply(this, arguments);\n  }\n}\n/**\n * Creates an instance of Tokei.\n * @param  {String} locale The local locale to set.\n * @return {Tokei}        The Tokei instance.\n * @public\n */\nvar tokei = function(locale) {\n  /**\n   *### Example\n   * \n   *#### Get the formatted date, time, or number.\n   *\n   *```javascript\n   * tokei().date().format();\n   * //usage:\n   * //tokei().[api]().format()\n   * ```\n   * \n   *#### Setting the locale.\n   *\n   *```javascript\n   * tokei('ja').date().format()\n   * //usage:\n   * //tokei([String locale]).[api]().format()\n   * ```\n   */\n  return new Tokei(locale);\n};\n\n/**\n * @method  locale\n * @static\n * Sets the global locale for Tokei.\n * @param  {Object} locale The global locale.\n * @return {Object}     The global locale.\n * @public\n */\ntokei.locale = function(locale) {\n  settings.locale = locale;\n  return settings.locale;\n};\n\n/**\n * @method  config\n * @static\n * Sets the global options for Tokei.\n * @param  {Object} options The global options.\n * @return {Object}     The global options.\n * @public\n */\ntokei.config = function(options) {\n  settings.options = options || settings.options;\n  return settings.options;\n};\n\n/**\n * The global moment. See [Moment.js](http://momentjs.com/).\n * @type {Moment}\n * @public\n */\ntokei.moment = moment;\n\nexport default tokei;"],"sourceRoot":"/source/"}